package com.example.newsapp;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.AuthFailureError;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class MainActivity extends AppCompatActivity {
    EditText userInputTv;
    TextView titleTv;
    TextView descTv;
    TextView authorTv;
    ImageView imageView;


    RecyclerView recyclerView;
    RecyclerViewAdapter adapter;
    private ProgressDialog progressDialog;
    private Handler delayHandler;
    private Runnable delayRunnable;
    private static final long DELAY_DURATION = 1000;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        progressDialog = new ProgressDialog(this);
        progressDialog.setMessage("Loading...");
        progressDialog.setCancelable(false);

        recyclerView = findViewById(R.id.recyclerView);

        ArrayList<MyDataModel> tasks = new ArrayList<>();

        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(this);
        recyclerView.setLayoutManager(layoutManager);

        adapter = new RecyclerViewAdapter(this, tasks);
        recyclerView.setAdapter(adapter);

        userInputTv = findViewById(R.id.search);

        delayHandler = new Handler(Looper.getMainLooper());
        delayRunnable = new Runnable() {
            @Override
            public void run() {
                fetchData();
            }
        };

        userInputTv.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                // Cancel any pending delayed execution
                delayHandler.removeCallbacks(delayRunnable);
            }


            @Override
            public void afterTextChanged(Editable s) {
                String userInput = s.toString().trim();
                if (!userInput.isEmpty()) {

                    delayHandler.postDelayed(delayRunnable, DELAY_DURATION);
                }
            }
        });
    }

    public void fetchData() {
        String userInput = userInputTv.getText().toString().trim();
        String apiUrl = "https://inshorts.deta.dev/news?category=" + userInput;

        progressDialog.show();

        RequestQueue requestQueue = Volley.newRequestQueue(this);

        StringRequest stringRequest = new StringRequest(Request.Method.GET, apiUrl, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                progressDialog.dismiss();
                String jsonData = response;
                Log.d("JSON DATA: ", jsonData);
                jsonArrayDecode(jsonData);
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                progressDialog.dismiss();
                Toast.makeText(MainActivity.this, "Error fetching data", Toast.LENGTH_SHORT).show();
            }
        });

        requestQueue.add(stringRequest);
    }

    public void jsonArrayDecode(String jsonData) {
        ArrayList<MyDataModel> data = new ArrayList<MyDataModel>();
        try {
            JSONObject jsonObject = new JSONObject(jsonData);
            JSONArray posts = jsonObject.getJSONArray("data");

            for (int i = 0; i < posts.length(); i++) {
                JSONObject post = posts.getJSONObject(i);

                String title = post.getString("title");
                String description = post.getString("content");
                String author = post.getString("author");
                String date = post.getString("date");
                String thumbnail = post.getString("imageUrl");

                data.add(new MyDataModel(title, description, author, date, thumbnail));
            }

            adapter.setPosts(data);

        } catch (JSONException e) {
            throw new RuntimeException(e);
        }
    }
}
